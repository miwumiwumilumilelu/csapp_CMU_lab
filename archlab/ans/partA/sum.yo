                            | #sum.ys
                            | #sum_list - Sum the elements of a linked list 
                            | 
                            | #1.init__stack
0x000:                      | .pos 0   # 指示后续代码从地址0开始
0x000: 30f40001000000000000 |     irmovq stack, %rsp   # 初始化栈指针指向stack区域(rsp=$stack)
0x00a: 807f00000000000000   |     call main            # 调用main函数
0x013: 00                   |     halt                 # 程序终止,确保main返回后终止
                            | 
                            | 
                            | #2.链表数据定义
                            |         
0x018:                      | .align 8    # 确保每个节点起始地址按8字节对齐
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a         # 节点1的值：0x00a (10)
0x020: 2800000000000000     |     .quad e1e2          # 节点1的next指针指向e1e2
0x028:                      | e1e2:
0x028: b000000000000000     |     .quad 0x0b0         # 节点2的值：0x0b0 (176)
0x030: 3800000000000000     |     .quad e1e3          # 节点2的next指针指向e1e3
0x038:                      | e1e3:
0x038: 000c000000000000     |     .quad 0xc00         # 节点3的值：0xc00 (3072)
0x040: 0000000000000000     |     .quad 0             # 节点3的next指针为NULL
                            | #.quad  确保每个节点起始地址按8字节对齐
                            | 
                            | 
                            | #3.遍历累加
                            | 
0x048:                      | sum_list:
0x048: 30f00000000000000000 |     irmovq $0, %rax     # 初始化返回值%rax为0
0x052: 707300000000000000   |     jmp end           # 跳转到循环条件检查
0x05b:                      | loop:
0x05b: 50670000000000000000 |     mrmovq 0(%rdi), %rsi # 加载当前节点的值到%rsi
0x065: 6060                 |     addq %rsi, %rax     # 将值累加到%rax
0x067: 50670800000000000000 |     mrmovq 8(%rdi), %rsi # 加载next指针到%rsi
0x071: 2067                 |     rrmovq %rsi, %rdi   # 更新%rdi为下一个节点的地址
0x073:                      | end:
0x073: 6277                 |     andq %rdi, %rdi     # 检查%rdi是否为NULL
0x075: 745b00000000000000   |     jne loop            # 若非NULL，跳回循环体
0x07e: 90                   |     ret                 # 返回累加结果
                            | 
                            | 
                            | #4.main
                            | 
0x07f:                      | main:
0x07f: 30f71800000000000000 |     irmovq ele1, %rdi   # 将链表头节点地址传入%rdi
0x089: 804800000000000000   |     call sum_list       # 调用sum_list函数
0x092: 90                   |     ret                 # 返回（最终由halt终止程序）
                            | 
                            | #5.栈空间分配
                            | 
0x100:                      | .pos 0x100              # 指定栈起始地址0x400,以保证程序数据和栈数据不会冲突 
0x100:                      | stack:                  # stack 标签标记该位置
